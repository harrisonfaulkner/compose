volumes:
  monitoring:
  etc_wireguard:
  nfsmountCC:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=192.168.1.10,nolock,soft,rw
      device: ":/mnt/hdd-storage01/hdd-storage01"

services:
  sonarr:
    image: ghcr.io/hotio/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /opt/sonarr/config:/config
      - "nfsmountCC:/mnt/"
    ports:
      - 8989:8989
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8989/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  radarr:
    image: ghcr.io/hotio/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /opt/radarr/config:/config
      - "nfsmountCC:/mnt/"
    ports:
      - 7878:7878
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7878/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  sabnzbd:
    image: ghcr.io/hotio/sabnzbd
    container_name: sabnzbd
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /opt/sabnzbd/config:/config
      - "nfsmountCC:/mnt/"
    ports:
      - 8080:8080
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api?mode=version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=America/Chicago
      - PORT=5055
    ports:
      - 5055:5055
    volumes:
      - /opt/overseerr/config:/app/config
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5055/api/v1/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  prowlarr:
    image: ghcr.io/hotio/prowlarr
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /opt/prowlarr/config:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9696/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  freshrss:
    image: freshrss/freshrss:latest
    container_name: freshrss
    ports:
      - "8585:80"
    environment:
      - TRUSTED_PROXY=10.10.10.20/32
      - TZ=America/Chicago
      - CRON_MIN=*/20
    volumes:
      - /opt/freshrss/data:/var/www/FreshRSS/data
      - /opt/freshrss/extensions:/var/www/FreshRSS/extensions
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/i/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  beszel:
    image: henrygd/beszel:latest
    container_name: beszel
    restart: unless-stopped
    ports:
      - 8090:8090
    volumes:
      - /opt/beszel/data:/beszel_data
      - /opt/beszel/socket:/beszel_socket
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  beszel-agent:
    image: henrygd/beszel-agent
    container_name: beszel-agent
    restart: unless-stopped
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./beszel_agent_data:/var/lib/beszel-agent
      # monitor other disks / partitions by mounting a folder in /extra-filesystems
      # - /mnt/disk/.beszel:/extra-filesystems/sda1:ro
    environment:
      LISTEN: 45876
      KEY: 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIvGdArM62pH6FgaFBekiwNwQG5j+3DJZw8uApgVbNOn'
      TOKEN: 9cc42db8-410b-4da6-acaa-b3f597a49e67
      HUB_URL: http://192.168.1.25:8090

  homebridge:
    image: homebridge/homebridge:latest
    container_name: homebridge
    restart: always
    network_mode: host
    volumes:
      - /opt/homebridge/data:/homebridge
    logging:
      driver: json-file
      options:
        max-size: "10mb"
        max-file: "1"

  scrypted:
    environment:
      - SCRYPTED_WEBHOOK_UPDATE_AUTHORIZATION=Bearer ${WATCHTOWER_HTTP_API_TOKEN}
      - SCRYPTED_WEBHOOK_UPDATE=http://localhost:10444/v1/update
    image: ghcr.io/koush/scrypted
    volumes:
      - /opt/scrypted/volume:/server/volume
    container_name: scrypted
    restart: unless-stopped
    network_mode: host
    logging:
      driver: "none"
    labels:
      - "com.centurylinklabs.watchtower.scope=scrypted"
    dns:
      - ${SCRYPTED_DNS_SERVER_0:-192.168.1.1}

  watchtower:
    environment:
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_HTTP_API_TOKEN}
      - WATCHTOWER_HTTP_API_UPDATE=true
      - WATCHTOWER_SCOPE=scrypted
      - WATCHTOWER_HTTP_API_PERIODIC_POLLS=${WATCHTOWER_HTTP_API_PERIODIC_POLLS:-true}
    image: containrrr/watchtower
    container_name: scrypted-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "com.centurylinklabs.watchtower.scope=scrypted"
    ports:
      - 10444:8080
    command: --interval 3600 --cleanup --scope scrypted
    dns:
      - ${SCRYPTED_DNS_SERVER_0:-192.168.1.1}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/update"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  checkmk:
    image: "checkmk/check-mk-raw:2.4.0-latest"
    container_name: "monitoring"
    environment:
      - CMK_PASSWORD=${CMK_PASSWORD}
      - TZ=America/Chicago
    volumes:
      - monitoring:/omd/sites
    tmpfs:
      - /opt/omd/sites/cmk/tmp:uid=1000,gid=1000
    ports:
      - 9090:5000
      - 8000:8000
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/cmk/check_mk/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  wireguard:
    image: j4v3l/wireguard-dashboard:beta
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - TZ=America/Chicago
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - WG_HOST=${WG_HOST:-auto}
      - WG_PORT=${WG_PORT:-51820}
      - WG_DASHBOARD_PORT=${WG_DASHBOARD_PORT:-10086}
      - WG_DASHBOARD_HOST=${WG_DASHBOARD_HOST:-0.0.0.0}
      - WG_ALLOWED_IPS=${WG_ALLOWED_IPS:-0.0.0.0/0, ::/0}
      - WG_PERSISTENT_KEEPALIVE=${WG_PERSISTENT_KEEPALIVE:-25}
      - WG_DNS_SERVERS=${WG_DNS_SERVERS:-1.1.1.1,8.8.8.8}
      - AUTO_UPDATE=${AUTO_UPDATE:-false}
      - UPDATE_DASHBOARD=${UPDATE_DASHBOARD:-false}
    volumes:
      - /opt/wireguard/config:/etc/wireguard
      - /opt/wireguard/dashboard-data:/opt/WGDashboard/src/db
    ports:
      - "${WG_PORT:-51820}:51820/udp"
      - "${WG_DASHBOARD_PORT:-10086}:10086/tcp"
    restart: unless-stopped
    privileged: true
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
    healthcheck:
      test: ["CMD", "wg", "show"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
